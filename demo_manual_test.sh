#!/bin/bash

# –°–∫—Ä–∏–ø—Ç —Ä—É—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –±–µ–∑ Docker

echo "üß™ –†—É—á–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ DevOps –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–π —Ä–∞–±–æ—Ç—ã"
echo "=============================================="

echo ""
echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞..."
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
files=(
    "README.md"
    "docker-compose.yml"
    "ansible/site.yml"
    "ansible/nginx.yml"
    "ansible/app.yml"
    "inventory/hosts"
    "app/app.py"
    "app/requirements.txt"
)

for file in "${files[@]}"; do
    if [ -f "$file" ]; then
        echo "‚úÖ $file"
    else
        echo "‚ùå $file –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
    fi
done

echo ""
echo "üìÇ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π —Ä–æ–ª–µ–π..."
directories=(
    "ansible/roles/nginx/tasks"
    "ansible/roles/nginx/templates"
    "ansible/roles/nginx/handlers"
    "ansible/roles/app_deploy/tasks"
    "ansible/roles/app_deploy/templates"
    "ansible/roles/app_deploy/handlers"
)

for dir in "${directories[@]}"; do
    if [ -d "$dir" ]; then
        echo "‚úÖ $dir"
    else
        echo "‚ùå $dir –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
    fi
done

echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ —Ñ–∞–π–ª–æ–≤..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ YAML —Ñ–∞–π–ª–æ–≤
yaml_files=("ansible/site.yml" "ansible/nginx.yml" "ansible/app.yml" "docker-compose.yml")
for file in "${yaml_files[@]}"; do
    if python3 -c "import yaml; yaml.safe_load(open('$file')); print('‚úÖ $file - –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π YAML')" 2>/dev/null; then
        echo "‚úÖ $file - –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π YAML"
    else
        echo "‚ùå $file - –æ—à–∏–±–∫–∞ YAML"
    fi
done

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Python —Ñ–∞–π–ª–æ–≤
python_files=("app/app.py")
for file in "${python_files[@]}"; do
    if python3 -m py_compile "$file" 2>/dev/null; then
        echo "‚úÖ $file - –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π Python"
    else
        echo "‚ùå $file - –æ—à–∏–±–∫–∞ Python"
    fi
done

echo ""
echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞:"
echo "========================="

# –ü–æ–¥—Å—á–µ—Ç —Å—Ç—Ä–æ–∫ –∫–æ–¥–∞
total_lines=0
echo ""
echo "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –≤ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö:"

for file in "${files[@]}"; do
    if [ -f "$file" ]; then
        lines=$(wc -l < "$file")
        total_lines=$((total_lines + lines))
        echo "  $file: $lines —Å—Ç—Ä–æ–∫"
    fi
done

echo ""
echo "–í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫ –≤ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö: $total_lines"

echo ""
echo "üèó –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞:"
echo "===================="

echo "‚îú‚îÄ‚îÄ üìÅ ansible/                    # Ansible –ø–ª–µ–π–±—É–∫–∏ –∏ —Ä–æ–ª–∏"
echo "‚îÇ   ‚îú‚îÄ‚îÄ üìÑ site.yml               # –ì–ª–∞–≤–Ω—ã–π –ø–ª–µ–π–±—É–∫"
echo "‚îÇ   ‚îú‚îÄ‚îÄ üìÑ nginx.yml              # –ü–ª–µ–π–±—É–∫ –¥–ª—è nginx"
echo "‚îÇ   ‚îú‚îÄ‚îÄ üìÑ app.yml                # –ü–ª–µ–π–±—É–∫ –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
echo "‚îÇ   ‚îî‚îÄ‚îÄ üìÅ roles/                 # –†–æ–ª–∏ Ansible"
echo "‚îÇ       ‚îú‚îÄ‚îÄ üìÅ nginx/             # –†–æ–ª—å –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ nginx"
echo "‚îÇ       ‚îî‚îÄ‚îÄ üìÅ app_deploy/        # –†–æ–ª—å –¥–ª—è –¥–µ–ø–ª–æ—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
echo "‚îú‚îÄ‚îÄ üìÅ app/                       # –ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
echo "‚îÇ   ‚îú‚îÄ‚îÄ üìÑ app.py                 # –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
echo "‚îÇ   ‚îî‚îÄ‚îÄ üìÑ requirements.txt       # –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Python"
echo "‚îú‚îÄ‚îÄ üìÅ docker/                    # Docker —Ñ–∞–π–ª—ã –∏ —Å–∫—Ä–∏–ø—Ç—ã"
echo "‚îÇ   ‚îú‚îÄ‚îÄ üìÑ Dockerfile.ansible     # Dockerfile –¥–ª—è ansible-master"
echo "‚îÇ   ‚îú‚îÄ‚îÄ üìÑ Dockerfile.nginx       # Dockerfile –¥–ª—è nginx-server"
echo "‚îÇ   ‚îú‚îÄ‚îÄ üìÑ Dockerfile.app         # Dockerfile –¥–ª—è app-server"
echo "‚îÇ   ‚îî‚îÄ‚îÄ üìÑ start_app.sh           # –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
echo "‚îî‚îÄ‚îÄ üìÅ inventory/                 # Ansible inventory —Ñ–∞–π–ª—ã"
echo "    ‚îú‚îÄ‚îÄ üìÑ hosts                  # –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π inventory"
echo "    ‚îî‚îÄ‚îÄ üìÑ docker_hosts.py        # –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π inventory —Å–∫—Ä–∏–ø—Ç"

echo ""
echo "üöÄ –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Ä–µ—à–µ–Ω–∏—è:"
echo "======================"
echo ""
echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –≤ —Å–µ—Ç–∏ devops-network:"
echo "  1. üì¶ ansible-master    - –ú–∞—Å—Ç–µ—Ä –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å Ansible"
echo "  2. üåê nginx-server      - –í–µ–±-—Å–µ—Ä–≤–µ—Ä (–ø–æ—Ä—Ç 8080)"
echo "  3. üêç app-server        - –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (–ø–æ—Ä—Ç 8000)"
echo "  4. üìä monitoring        - –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ health check"
echo ""
echo "–ü–æ—Ç–æ–∫ –¥–∞–Ω–Ω—ã—Ö:"
echo "  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ‚Üí Nginx (8080) ‚Üí Flask app (8000)"
echo ""
echo "Ansible —Ä–æ–ª–∏:"
echo "  - nginx: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞"
echo "  - app_deploy: –î–µ–ø–ª–æ–π Python –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
echo ""
echo "üéØ –ì–æ—Ç–æ–≤—ã–µ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é —Ñ–∞–π–ª—ã:"
echo "- –ü–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä Ansible —Ä–æ–ª–µ–π —Å —à–∞–±–ª–æ–Ω–∞–º–∏"
echo "- –ì–æ—Ç–æ–≤–æ–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ Flask"
echo "- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Docker —Å 4 –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º–∏"
echo "- –ü–æ–¥—Ä–æ–±–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –≤ README.md"
echo "- –°–∫—Ä–∏–ø—Ç—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –∑–∞–ø—É—Å–∫–∞"

echo ""
echo "‚úÖ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é!"
echo ""
echo "–î–ª—è –∑–∞–ø—É—Å–∫–∞ –≤ —Å—Ä–µ–¥–µ —Å Docker:"
echo "  docker-compose up --build -d"
echo "  docker-compose exec ansible-master ansible-playbook -i /inventory/hosts /ansible/site.yml"
echo ""
echo "–î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏:"
echo "  curl http://localhost:8080"
echo "  curl http://localhost:8080/app/"
echo "  curl http://localhost:8080/app/api/status"