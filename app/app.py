#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –¥–µ–ø–ª–æ—è —á–µ—Ä–µ–∑ Ansible
"""

import os
from datetime import datetime
from flask import Flask, jsonify, render_template_string

# –°–æ–∑–¥–∞–Ω–∏–µ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app = Flask(__name__)

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
app.config['DEBUG'] = os.getenv('DEBUG', 'False').lower() == 'true'
app.config['SECRET_KEY'] = os.getenv('SECRET_KEY', 'dev-secret-key')

@app.route('/')
def index():
    """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    html_content = """
    <!DOCTYPE html>
    <html lang="ru">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>–î–µ–º–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</title>
        <style>
            body {
                font-family: Arial, sans-serif;
                max-width: 800px;
                margin: 0 auto;
                padding: 20px;
                background-color: #f5f5f5;
            }
            .container {
                background-color: white;
                padding: 30px;
                border-radius: 10px;
                box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            }
            .header {
                text-align: center;
                color: #333;
                margin-bottom: 30px;
            }
            .info {
                margin: 20px 0;
                padding: 15px;
                background-color: #e8f4f8;
                border-left: 4px solid #2196F3;
                border-radius: 4px;
            }
            .status {
                display: inline-block;
                padding: 5px 15px;
                border-radius: 20px;
                color: white;
                font-weight: bold;
            }
            .success { background-color: #4CAF50; }
            .info-status { background-color: #2196F3; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>üöÄ –î–µ–º–æ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</h1>
                <p>–£—Å–ø–µ—à–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ —á–µ—Ä–µ–∑ Ansible!</p>
            </div>

            <div class="info">
                <h3>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏:</h3>
                <p><strong>–í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞:</strong> {{ timestamp }}</p>
                <p><strong>–°—Ç–∞—Ç—É—Å:</strong> <span class="status success">–†–∞–±–æ—Ç–∞–µ—Ç</span></p>
                <p><strong>–†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏:</strong> <span class="status {{ 'info-status' if debug else 'success' }}">{{ '–í–∫–ª—é—á–µ–Ω' if debug else '–û—Ç–∫–ª—é—á–µ–Ω' }}</span></p>
                <p><strong>–•–æ—Å—Ç:</strong> {{ host }}</p>
                <p><strong>–ü–æ—Ä—Ç:</strong> {{ port }}</p>
            </div>

            <div class="info">
                <h3>–û –ø—Ä–æ–µ–∫—Ç–µ:</h3>
                <p>–≠—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±—ã–ª–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ —Å –ø–æ–º–æ—â—å—é:</p>
                <ul>
                    <li>üê≥ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤</li>
                    <li>‚öôÔ∏è Ansible –ø–ª–µ–π–±—É–∫–æ–≤</li>
                    <li>üåê Nginx –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞</li>
                    <li>üêç Python Flask —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞</li>
                </ul>
            </div>

            <div class="info">
                <h3>API Endpoints:</h3>
                <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ API: <a href="/api/status" target="_blank">/api/status</a></p>
                <p>Health check: <a href="/health" target="_blank">/health</a></p>
            </div>
        </div>
    </body>
    </html>
    """

    return render_template_string(html_content,
                                timestamp=datetime.now().strftime('%Y-%m-%d %H:%M:%S'),
                                debug=app.config['DEBUG'],
                                host=os.getenv('APP_HOST', 'localhost'),
                                port=os.getenv('APP_PORT', '8000'))

@app.route('/health')
def health():
    """Health check endpoint"""
    return jsonify({
        'status': 'healthy',
        'timestamp': datetime.now().isoformat(),
        'service': 'demo-app'
    })

@app.route('/api/status')
def api_status():
    """API —Å—Ç–∞—Ç—É—Å endpoint"""
    return jsonify({
        'status': 'running',
        'message': '–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ —á–µ—Ä–µ–∑ Ansible!',
        'timestamp': datetime.now().isoformat(),
        'version': '1.0.0',
        'environment': {
            'debug': app.config['DEBUG'],
            'host': os.getenv('APP_HOST'),
            'port': os.getenv('APP_PORT')
        }
    })

@app.errorhandler(404)
def not_found(error):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ 404 –æ—à–∏–±–∫–∏"""
    return jsonify({
        'error': '–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞',
        'status_code': 404,
        'timestamp': datetime.now().isoformat()
    }), 404

@app.errorhandler(500)
def internal_error(error):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ 500 –æ—à–∏–±–∫–∏"""
    return jsonify({
        'error': '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞',
        'status_code': 500,
        'timestamp': datetime.now().isoformat()
    }), 500

if __name__ == '__main__':
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    host = os.getenv('APP_HOST', '0.0.0.0')
    port = int(os.getenv('APP_PORT', '8000'))
    debug = os.getenv('DEBUG', 'False').lower() == 'true'

    print(f"–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ {host}:{port}")
    print(f"–†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏: {'–í–∫–ª—é—á–µ–Ω' if debug else '–û—Ç–∫–ª—é—á–µ–Ω'}")

    app.run(host=host, port=port, debug=debug)